---
# tasks file for ./roles/ssh

# ------------------------------------------------------------------------------
- name: "SSH | apt | install apt dependencies"
  become: true
  ansible.builtin.apt:
    pkg: "{{ item }}"
    state: present
    force_apt_get: true # apt-get instead of aptitude
    update_cache: true
  loop: "{{ ssh_package_dependencies | flatten(levels=1) }}"
  when:
    - ssh_package_dependencies is defined
  tags:
    - ssh

# ------------------------------------------------------------------------------
- name: "SSH | template | copy sshd_config template"
  become: true
  ansible.builtin.template:
    src: sshd_config.config.j2
    dest: "{{ ssh_directory }}/sshd_config"
    backup: true
    owner: root
    group: root
    mode: "0644"
  notify: restart ssh
  tags:
    - ssh

- name: "SSH | shell | check ssh has short moduli (moduli >= {{ ssh_short_moduli }}, allowed)"
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    awk '$5 <
    {{ ssh_short_moduli }} { exit 1 }' /etc/ssh/moduli
  args:
    executable: /bin/bash
  changed_when: task5_check.rc == 1
  failed_when: task5_check.rc == 2
  ignore_errors: true
  register: task5_check
  tags:
    - ssh

- name: "SSH | shell | deactivate ssh short moduli in two commands (moduli >= {{ ssh_short_moduli }}, allowed)"
  become: true
  ansible.builtin.shell: >
    set -o pipefail &&
    awk '$5 >= {{ ssh_short_moduli }}' /etc/ssh/moduli >
    /etc/ssh/moduli.tmp &&
    mv /etc/ssh/moduli.tmp /etc/ssh/moduli
  args:
    executable: /bin/bash
  notify: restart ssh
  changed_when: true
  when:
    - task5_check is defined
    - task5_check.changed | bool
  tags:
    - ssh

# ------------------------------------------------------------------------------
- name: "SSH | command | recreate ssh_host_* files - remove existing"
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ ssh_host_keys_func_rm | flatten(levels=1) }}"
  tags:
    - ssh

- name: "SSH | command | recreate ssh_host_* files - regenerate new"
  become: true
  ansible.builtin.command: "{{ item }}"
  register: is_ssh_recreated
  changed_when: is_ssh_recreated.rc not in [0,1]
  failed_when: is_ssh_recreated.rc not in [0,1]
  notify: restart ssh
  loop: "{{ ssh_host_keys_func_gen | flatten(levels=1) }}"
  tags:
    - molecule-idempotence-notest
    - ssh
